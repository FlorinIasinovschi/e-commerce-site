{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cartRedux';\nimport userReducer from './userRedux';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(configureStore);","map":{"version":3,"sources":["G:/Dropbox (Personale)/Programming/e-commerce/client/src/redux/store.js"],"names":["configureStore","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAKA,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBV,WAAhB,CAAvC;AAEA,eAAeF,cAAc,CAAC;AAC5BgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEhB,WADC;AAEPiB,IAAAA,IAAI,EAAEd;AAFC,GADmB;AAK5Be,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AANM,CAAD,CAA7B;AAcA,OAAO,IAAIa,SAAS,GAAGpB,YAAY,CAACH,cAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport cartReducer from './cartRedux'\r\nimport userReducer from './userRedux'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, userReducer)\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n    user: persistReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\n\r\nexport let persistor = persistStore(configureStore)"]},"metadata":{},"sourceType":"module"}